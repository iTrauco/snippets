{
  "Library Name" : "main.snippetslablibrary",
  "Date Exported" : "2020-10-22 13:33:25 -0400",
  "Snippets Count" : "22",
  "Snippets" : [
    {
      "Date Created" : "2020-10-01 15:43:34 -0400",
      "Date Modified" : "2020-10-01 16:51:55 -0400",
      "Folder" : "vim",
      "Title" : "sessions",
      "Fragments" : [
        {
          "Content" : ":mks ~\/.SpaveVim.d\/sessions\/file_name.vim               to save sessions\n\n\n:source ~\/.SpaveVim.d\/sessions\/file_name.vim            to restore session:w\n\n\nvim -S ~\/.SpaveVim.d\/sessions\/file_name.vim             -run on vim initalization",
          "Date Modified" : "2020-10-01 16:51:17 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 15:43:34 -0400"
        }
      ],
      "Tags" : [
        "sessions",
        "vim"
      ]
    },
    {
      "Date Created" : "2019-08-01 19:58:44 -0400",
      "Date Modified" : "2019-08-01 19:58:50 -0400",
      "Folder" : "git",
      "Title" : "shows file names and what changed in each file",
      "Fragments" : [
        {
          "Content" : "git diff <a commit sha1>...<b commit sha2>",
          "Date Modified" : "2019-08-01 19:59:25 -0400",
          "Note" : "http:\/\/bit.ly\/2GGHmte",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2019-08-01 19:58:44 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2020-10-02 15:55:35 -0400",
      "Date Modified" : "2020-10-02 15:55:47 -0400",
      "Folder" : "g-sheets",
      "Title" : "Whole Row Highlighting",
      "Fragments" : [
        {
          "Content" : "=$A2=\"Exact Word To Match\"\n\n=$B=TRUE",
          "Date Modified" : "2020-10-02 15:57:18 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-02 15:55:35 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2020-10-01 16:00:12 -0400",
      "Date Modified" : "2020-10-01 16:00:26 -0400",
      "Folder" : "python3",
      "Title" : "json_to_csv.py",
      "Fragments" : [
        {
          "Content" : "#!\/usr\/bin\/env python3\n# -*- coding: utf-8 -*-\n\nimport pandas as pd\ndf = pd.read_json(r'PATH\/TO\/file.json')\ndf.to_csv('output_file_name.csv')",
          "Date Modified" : "2020-10-01 16:53:44 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Python 3",
          "Date Created" : "2020-10-01 16:00:12 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2019-08-01 19:54:49 -0400",
      "Date Modified" : "2019-08-01 19:55:25 -0400",
      "Folder" : "git",
      "Title" : "git diff --stat <hashID> <hashID>",
      "Fragments" : [
        {
          "Content" : "git diff --stat ",
          "Date Modified" : "2019-08-01 19:55:46 -0400",
          "Note" : "http:\/\/bit.ly\/2GGHmte",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2019-08-01 19:54:49 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2020-10-01 16:07:10 -0400",
      "Date Modified" : "2020-10-01 16:13:46 -0400",
      "Folder" : "g-sheets",
      "Title" : "← → First Whitespace Text Extraction",
      "Fragments" : [
        {
          "Content" : "=LEFT(B3,FIND(\" \",B3)-1)",
          "Date Modified" : "2020-10-01 16:16:38 -0400",
          "Note" : "",
          "Title" : "Left ← ",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 16:07:10 -0400"
        },
        {
          "Content" : "=MID(B2,FIND(\" \",B2)+1,256)",
          "Date Modified" : "2020-10-01 16:16:49 -0400",
          "Note" : "",
          "Title" : "→ Right ",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 16:13:46 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2020-10-01 07:50:50 -0400",
      "Date Modified" : "2020-10-01 07:51:37 -0400",
      "Folder" : "g-sheets",
      "Title" : "Conditional Formatting: Errors",
      "Fragments" : [
        {
          "Content" : "=error.type(A1)>0\n\n=iserror(A1)=true\n\n=type(A1)=16\n\n=iferror(A1,true)",
          "Date Modified" : "2020-10-01 07:51:20 -0400",
          "Note" : "There are four formulas. Use any of the ones to highlight total error cells.",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 07:50:50 -0400"
        }
      ],
      "Tags" : [
        "google sheets",
        "errors",
        "conditional formatting"
      ]
    },
    {
      "Date Created" : "2020-10-01 16:06:20 -0400",
      "Date Modified" : "2020-10-01 16:06:52 -0400",
      "Folder" : "g-sheets",
      "Title" : "Concat 2 Cells Together",
      "Fragments" : [
        {
          "Content" : "=CONCATENATE(D2:E2)",
          "Date Modified" : "2020-10-01 16:06:56 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 16:06:20 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2019-08-01 17:00:51 -0400",
      "Date Modified" : "2019-08-01 17:01:14 -0400",
      "Folder" : "git",
      "Title" : "git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit",
      "Fragments" : [
        {
          "Content" : "git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\n",
          "Date Modified" : "2019-08-01 17:01:05 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2019-08-01 17:00:51 -0400"
        }
      ],
      "Tags" : [
        "git",
        "git log"
      ]
    },
    {
      "Date Created" : "2020-10-01 15:59:23 -0400",
      "Date Modified" : "2020-10-01 15:59:35 -0400",
      "Folder" : "bash",
      "Title" : "Batch Whois Domain Lookup",
      "Fragments" : [
        {
          "Content" : "#!\/usr\/bin\/env bash\n\n#!\/bin\/bash\nfor domain in `cat domains.txt`\ndo\n   echo $domain\n   `whois $domain >> whois-results.txt`\ndone",
          "Date Modified" : "2020-10-01 16:01:37 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Bash",
          "Date Created" : "2020-10-01 15:59:23 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2020-10-01 03:37:18 -0400",
      "Date Modified" : "2020-10-01 16:52:06 -0400",
      "Folder" : "vim",
      "Title" : "Folding Commands",
      "Fragments" : [
        {
          "Content" : "zf#j creates a fold from the cursor down # lines.\n\nzf\/string creates a fold from the cursor to string.\n\nzj moves the cursor to the next fold.\n\nzk moves the cursor to the previous fold.\n\nzo opens a fold at the cursor.\n\nzO opens all folds at the cursor.\n\nzm increases the foldlevel by one.\n\nzM closes all open folds.\n\nzr decreases the foldlevel by one.\n\nzR decreases the foldlevel to zero — all folds will be open.\n\nzd deletes the fold at the cursor.\n\nzE deletes all folds.\n\n[z move to start of open fold.\n\n]z move to end of open fold.",
          "Date Modified" : "2020-10-01 03:38:12 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 03:37:18 -0400"
        }
      ],
      "Tags" : [
        "folding",
        "vim"
      ]
    },
    {
      "Date Created" : "2020-10-02 18:06:24 -0400",
      "Date Modified" : "2020-10-02 18:07:03 -0400",
      "Folder" : "VLOOKUP",
      "Title" : "Comparing Two Columns",
      "Fragments" : [
        {
          "Content" : "=VLOOKUP(lookup_value, table_array, col_index_num, [range_lookup])\n\n",
          "Date Modified" : "2020-10-02 18:07:14 -0400",
          "Note" : "lookup_value – the value that we want to find in the table_array\ntable_array – the range of cells containing the data we want to find or retrieve\ncol_index_num – the column number in the table_array corresponding to the information we want to retrieve, relative to the lookup_value\n[range_lookup] – optional; value can either be TRUE or FALSE\nif TRUE or omitted, VLOOKUP returns either an exact or approximate match\nif FALSE, VLOOKUP will only find an exact match",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-02 18:06:24 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2019-08-01 17:03:29 -0400",
      "Date Modified" : "2019-08-01 17:04:15 -0400",
      "Folder" : "git",
      "Title" : "git show <hash> --name-only",
      "Fragments" : [
        {
          "Content" : "",
          "Date Modified" : "2019-08-01 17:04:10 -0400",
          "Note" : "Recently I wanted to pull a list of changed files from an older commit from the command line.\n\nTurns out (like most things in Git) this is very easy to do. git show –name-only {commit}\n\nYou can replace {commit} with the SHA1 you want to retrieve, or things like HEAD or HEAD^^\n\nI made this post into a YouTube video",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2019-08-01 17:03:29 -0400"
        }
      ],
      "Tags" : [
        "git log",
        "git"
      ]
    },
    {
      "Date Created" : "2020-10-01 16:17:33 -0400",
      "Date Modified" : "2020-10-01 16:21:03 -0400",
      "Folder" : "g-sheets",
      "Title" : "(Surround String of Another Cell)",
      "Fragments" : [
        {
          "Content" : "=\"(\"&C2&\")\"",
          "Date Modified" : "2020-10-01 16:19:43 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 16:17:33 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2020-10-01 02:26:19 -0400",
      "Date Modified" : "2020-10-01 16:52:12 -0400",
      "Folder" : "vim",
      "Title" : "Bulk Line Comments",
      "Fragments" : [
        {
          "Content" : "Esc                    \n \n⌃ + v                   CONTROL + visual mode\n \n↑\/↓                     (Up \/ Down w\/ Arrows Keys)\n  \nShift + I(capital I) \n\n#                       Press ANY Symbol to Populate\n\n",
          "Date Modified" : "2020-10-01 16:27:35 -0400",
          "Note" : "press Esc (to leave editing or other mode)\nhit ctrl+v (visual block mode)\nuse the ↑\/↓ arrow keys to select lines you want (it won't highlight everything - it's OK!)\nShift+i (capital I)\ninsert the text you want, e.g. %\npress EscEsc\n\n",
          "Title" : "Commenting",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 02:26:19 -0400"
        },
        {
          "Content" : "",
          "Date Modified" : "2020-10-01 02:45:23 -0400",
          "Note" : "Uncommenting\n\npress Esc (to leave editing or other mode)\nhit ctrl+v (visual block mode)\nuse the ↑\/↓ arrow keys to select the lines to uncomment.\nIf you want to select multiple characters, use one or combine these methods:\n\nuse the left\/right arrow keys to select more text\nto select chunks of text use shift + ←\/→ arrow key\nyou can repeatedly push the delete keys below, like a regular delete button\npress d or x to delete characters, repeatedly if necessary",
          "Title" : "Uncommenting",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 02:35:29 -0400"
        }
      ],
      "Tags" : [
        "vim",
        "comments",
        "multiple lines"
      ]
    },
    {
      "Date Created" : "2020-10-01 06:41:34 -0400",
      "Date Modified" : "2020-10-01 06:41:45 -0400",
      "Folder" : "g-sheets",
      "Title" : "Insert Brackets Around Text In A Cell",
      "Fragments" : [
        {
          "Content" : "=\"(\"&A2&\")\"",
          "Date Modified" : "2020-10-01 16:04:08 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 06:41:34 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2020-10-01 02:50:47 -0400",
      "Date Modified" : "2020-10-01 02:52:05 -0400",
      "Folder" : "macOS",
      "Title" : "Mac Keyboard Icons ⌘ ⌥ ⌃",
      "Fragments" : [
        {
          "Content" : "⌘ is the Command () key.\n\n⌃ is the Control key.\n\n⌥ is the Option (alt) key.\n\n⇧ is the Shift key.\n\n⇪ is the Caps Lock key.\n\nfn is the Function key. Now you know, but if the symbols confuse you, don't feel too bad about it.",
          "Date Modified" : "2020-10-01 15:48:29 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 02:50:47 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2019-08-15 23:46:35 -0400",
      "Date Modified" : "2019-08-15 23:46:53 -0400",
      "Folder" : "Uncategorized",
      "Title" : "output keycodes in js",
      "Fragments" : [
        {
          "Content" : "function setupKeyLogger() {\n         document.onkeydown = function(e) {\n           console.log(e);\n         }\n}",
          "Date Modified" : "2020-10-01 02:32:34 -0400",
          "Note" : "\nuse just the following simple handler to output the key codes to the JavaScript console.",
          "Title" : "Fragment",
          "Language" : "Python",
          "Date Created" : "2019-08-15 23:46:35 -0400"
        }
      ],
      "Tags" : [
        "keycodes",
        "keyboard"
      ]
    },
    {
      "Date Created" : "2020-10-01 02:42:53 -0400",
      "Date Modified" : "2020-10-01 02:44:30 -0400",
      "Folder" : "Uncategorized",
      "Title" : "Sessions",
      "Fragments" : [
        {
          "Content" : "",
          "Date Modified" : "2020-10-01 02:45:08 -0400",
          "Note" : "",
          "Title" : "asds",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 02:42:53 -0400"
        },
        {
          "Content" : "",
          "Date Modified" : "2020-10-01 02:44:30 -0400",
          "Note" : "",
          "Title" : "Fragment 2",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 02:44:30 -0400"
        }
      ],
      "Tags" : [
        "vim",
        "sessions"
      ]
    },
    {
      "Date Created" : "2020-10-01 17:27:09 -0400",
      "Date Modified" : "2020-10-01 17:27:19 -0400",
      "Folder" : "SpaceVim",
      "Title" : "CntrlSpace Keybindings",
      "Fragments" : [
        {
          "Content" : "\nKeybindings\tDescriptions\n\nh\ttoggle view home (buffers) list\n\nH\tenter home (buffers) list in search\n\no\ttoggle view project files list\n\nO\tenter project files in search\n\nl\ttoggle view tabs list\n\nL\tenter tabs search in search\n\nw\ttoggle view workspaces list\n\nW\tenter workspaces list in search\n\nb\ttoggle view bookmarks list\n\nB\tenter bookmarks list in search\n\n\/\ttoggle search mode for current list\n\n?\tdisplay help for current list and mode",
          "Date Modified" : "2020-10-01 17:27:36 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-01 17:27:09 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2019-08-01 07:53:59 -0400",
      "Date Modified" : "2019-08-01 07:54:44 -0400",
      "Folder" : "git",
      "Title" : "git diff-tree",
      "Fragments" : [
        {
          "Content" : "git diff-tree --no-commit-id --name-only -r",
          "Date Modified" : "2019-08-01 07:54:25 -0400",
          "Note" : "",
          "Title" : "Fragment",
          "Language" : "Plain Text",
          "Date Created" : "2019-08-01 07:53:59 -0400"
        }
      ],
      "Tags" : [

      ]
    },
    {
      "Date Created" : "2020-10-22 12:52:31 -0400",
      "Date Modified" : "2020-10-22 12:53:12 -0400",
      "Folder" : "hotkey-shortcuts",
      "Title" : "Confluence",
      "Fragments" : [
        {
          "Content" : "# Block Formatting\n⌘+0 - Paragraph\n⌘+1 - Heading 1\n⌘+6 - Heading 6 \n⌘+7 -  Preformatted\n⌘+8 - Quote\n⌘+Shift+B - Bullet list\n⌘+Shift+N - Numbered list\n\n# Rich Formatting\n⌘+M - Files and images\n⌘+K - Link\n⌘+Shift+D - Insert markup\n⌘+Shift+A - Macro\n⌘+Shift+I - Table\n⌘+Shift+X - Cut row\n⌘+Shift+C - Copy row\n⌘+Shift+V - Paste row above\n\n# Editing Actions\n⌘+Shift+E - Preview\n⌘+S - Save",
          "Date Modified" : "2020-10-22 12:58:44 -0400",
          "Note" : "Official hotkey shortcuts for Confluence. ",
          "Title" : "Editor Hotkeys",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-22 12:52:31 -0400"
        },
        {
          "Content" : "# Font Formatting\n*Bold* - Bold text\n+Underline+ - Underline text\n_Italic_ - Italic text\n{{Monospace}} - Monospace text\n\n# Autocomplete\n! - Image\/Media\n[ - Link\nMacro - {\n\n# Tables\t \t \t \n||||| + enter - first cell\n||heading||heading|| - heading\theading\n\n# Styles\nh1. Heading - Heading\nh3. Heading - Heading\nbq. Quote - Quote\n\n# Emoticons\n(\/)\n::)\n\n# Lists\n# list - list\n* bullets - bullets\ntask - [] task\n",
          "Date Modified" : "2020-10-22 13:26:39 -0400",
          "Note" : "",
          "Title" : "Editor Formatting ",
          "Language" : "Plain Text",
          "Date Created" : "2020-10-22 12:53:12 -0400"
        }
      ],
      "Tags" : [

      ]
    }
  ]
}